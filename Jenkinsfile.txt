pipeline {
    environment {
          /*   registry = "YourDockerhubAccount/YourRepository"
            registryCredential = 'dockerhub_id' */
            dockerImage = ''
            image_name='flightboot'
    }
    agent none
    stages {


       stage('Compile against JDK8'){
           parallel{
            stage('compile & package'){
                     agent {
                                     docker {
                                     image 'maven:3.5.0-jdk-8'
                                     args '-v /root/.m2:/root/.m2'
                                     }
                             }
                    steps {
                        sh 'mvn -B -DskipTests clean compile'
                    }
                    post {
                        success {
                             sh 'mvn -B -DskipTests package'
                        }
                    }
                }

            stage('Test') {
            agent {
                   docker {
                   image 'maven:3.5.0-jdk-8'
                   args '-v /root/.m2:/root/.m2'
                   }
                 }
                    steps {
                        sh 'mvn test'
                    }
                    post {
                        always {
                        junit 'target/surefire-reports/*.xml'
                        }
                    }
                }
        }
    }

        stage('create docker image'){
            agent any
              steps {
                            echo 'Starting to build docker image'
                           script{
                            docker.build "flightboot:latest"

             }
            }

           }

        stage('Install DockerCompose'){
          agent any
              steps {
                 sh 'curl -L "https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose'
                 sh 'chmod +x /usr/local/bin/docker-compose'
              }

          }

        stage('Dockercompose Up'){
           agent any
            steps {
                sh 'docker-compose up --build'
             }

           }
    }
}