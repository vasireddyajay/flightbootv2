pipeline {
    environment {
          /*   registry = "YourDockerhubAccount/YourRepository"
            registryCredential = 'dockerhub_id' */
            dockerImage = ''
            image_name='flightboot'
    }
    agent none
    stages {
         stage('Compile against different JDKs'){
            parallel{

        stage('JDK8') {
           agent {
                docker {
                   image 'maven:3.5.0-jdk-8'
                   args '-v /root/.m2:/root/.m2'
                }
            }
           stages{
            stage('compile'){
                    steps {
                        sh 'mvn -B -DskipTests clean compile'
                    }
                    post {
                        success {
                             sh 'mvn -B -DskipTests package'
                             sh 'cp -r $JENKINS_HOME/workspace/Flightbootv2 /home/flightbootv2/target'
                        }
                    }
                }

            stage('Test') {
                    steps {
                        sh 'mvn test'
                    }
                    post {
                        always {
                        junit 'target/surefire-reports/*.xml'
                        }
                    }
                }

        }
    }

        stage('JDK11') {
            agent {
                        docker {
                           image 'maven:3.6.0-jdk-11'
                           args '-v /root/.m2:/root/.m2'
                        }
                    }
                   stages{
                    stage('compile'){
                            steps {
                                sh 'mvn -B -DskipTests clean compile'
                            }
                        /*    post {
                                success {
                                     sh 'mvn -B -DskipTests package'
                                }
                            }  if it compiles against jdk11, its fine*/
                        }

                        stage('Test') {
                            steps {
                                sh 'mvn test'
                            }
                            post {
                                always {
                                junit 'target/surefire-reports/*.xml'
                                }
                            }
                        }
                   }
            }

         }
        }
         stage('create docker image'){
            agent any
              steps {
                            echo 'Starting to build docker image'
                           script{
                            docker.build "my-image:${env.BUILD_ID}"
             }
            }
           }
    }
    }